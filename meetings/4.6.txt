meeting 4.6

fragen wie er gerne den input hätte. 
das x hatten wir als literalmenge gesagt
x als liste als vllt als cmd parameter oder in den input text. 
wenn sachen fehlen dann müssen sachen noch nachgereicht werden. 

zu den optimierungen. mit heorem 5 
um d1- d6 kommt man nicht herum.
das wird bei dekomposition gematched. 

defintion 18 die dekompositionsregeln machen genau das gleiche was die lf's machen
dabei vermehrt sich dinge in der menge und dann wird geschaut ob man dafür eine regel hat.
das wird solange gemacht bis nichtsmehr geht. 
ziel der transformation sind temporale formeln und nichtmehr propositional
u r alwas verschwinden. für next gibt es keine formel und deswegen bleiben die drinnen bie defintion 18 unterer teil. 
mit der unteren geschichte wird nach widersprüchen geschaut. wenn nicht e1 gilt dann ist es erfüllbar. es werden nur erfüllbare behalten. wenn leere menge dann
nicht erfüllbar. 

dann geht es weiter mit dem baumaufbau. davor macht man es klein zu elementarys. 
die formeln die nur auf literalen bestehen brauchen nicht weiter betrachtet werden.
deswegen müssen nurnoch die nextformeln betrachtet werden. im statenode sind die implizit verundet. 

dekom unter definition 10
für jedes s1-sn  kann es rausgehen
zu skizze. was unten drin steht sidn alle alternativ zu sehn. 
aus den knoten werden die nächsten prestates für die nächste runde rausgeholt.
darauf wird der gleiche spaß gemacht. 
q ist die menge der formeln die durch die steps erzeugt wurde. was zu beginn die startformel war. in q werden die gemerkt die schon als prestates erzeugt wurden. 
in qj sind die nächsten drin. 
wenn die gleich sind, dann ist es unerfüllbar. 
vergleich mit tiefensuche( im vergelich) 
es kann auch sein, dass keine nachfolger da sind. dann wird q auch aus der qj?! weggeschmissen.
gibt es einn pfad? wenn es den nicht gibt, dann ist die formel nicht efüllbar. 
man muss zu nicht p kommen damit sie nicht erfüllbar ist. 

lf macht die widersprüchen ja schon raus?!

durch das lf bekommt man die konjunktion von literalen und die ganzen next formeln.
durch das abnudeln des lfs haben wir die p's und die nexts- was darunter liegt. 

derivatives müssten nichtmal ümbedingt zum aufspannen des graphes bentutzt werden sondern eventuell nur lf's

zu der frage was nichtmehr implementiert werden muss zum afa automaten bei defintion 11
was nur heißt, dass es teilformeln werden soll. 

die zuständen können wir auch on the fly generierern. delta ableitung und dann 
sehen wir was schon da ist und was für ein neuer gemacht werden muss. 
transition kann man mit der partiellen ableitung machen. 

zustände sollen durch zahlen repräsentiert werden. damit man nichtmerh auf den formeln herumgerechnet werden muss. 


25.6 nächster termin 11 uhr

